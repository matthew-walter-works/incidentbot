version: 2
jobs:
  build:
    environment:
      IMAGE_NAME: eb129/incidentbot
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build amd64 Docker Image
          command: |
            echo 'export IMAGE_TAG=$(cat version)' >> "$BASH_ENV"
            source "$BASH_ENV"
            docker build --file Dockerfile --tag $IMAGE_NAME:$IMAGE_TAG .
  build-arm64:
    environment:
      IMAGE_NAME: eb129/incidentbot
    docker:
      - image: cimg/base:current
    resource_class: arm.medium
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build arm64 Docker Image
          command: |
            echo 'export IMAGE_TAG=$(cat version)' >> "$BASH_ENV"
            source "$BASH_ENV"
            docker build --platform linux/arm64 --file Dockerfile.arm64 --tag $IMAGE_NAME:$IMAGE_TAG-arm64 .
  build-util:
    environment:
      IMAGE_NAME: eb129/incidentbot
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build util image
          command: |
            echo 'export IMAGE_TAG=util-$(cat version)' >> "$BASH_ENV"
            source "$BASH_ENV"
            docker build --file Dockerfile.util --tag $IMAGE_NAME:$IMAGE_TAG .
  build-util-arm64:
    environment:
      IMAGE_NAME: eb129/incidentbot
    docker:
      - image: cimg/base:current
    resource_class: arm.medium
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build util image
          command: |
            echo 'export IMAGE_TAG=util-$(cat version)' >> "$BASH_ENV"
            source "$BASH_ENV"
            docker build --platform linux/arm64 --file Dockerfile.util.arm64 --tag $IMAGE_NAME:$IMAGE_TAG-arm64 .
  publish:
    environment:
      IMAGE_NAME: eb129/incidentbot
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish amd64 Docker Image to Docker Hub
          command: |
            echo 'export IMAGE_TAG=$(cat version)' >> "$BASH_ENV"
            source "$BASH_ENV"
            docker build --file Dockerfile --tag $IMAGE_NAME:$IMAGE_TAG .
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:$IMAGE_TAG
  publish-arm64:
    environment:
      IMAGE_NAME: eb129/incidentbot
    docker:
      - image: cimg/base:current
    resource_class: arm.medium
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish arm64 Docker Image to Docker Hub
          command: |
            echo 'export IMAGE_TAG=$(cat version)' >> "$BASH_ENV"
            source "$BASH_ENV"
            docker build --platform linux/arm64 --file Dockerfile.arm64 --tag $IMAGE_NAME:$IMAGE_TAG-arm64 .
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:$IMAGE_TAG-arm64
  publish-util:
    environment:
      IMAGE_NAME: eb129/incidentbot
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish amd64 Docker Image to Docker Hub
          command: |
            echo 'export IMAGE_TAG=util-$(cat version)' >> "$BASH_ENV"
            source "$BASH_ENV"
            docker build --file Dockerfile.util --tag $IMAGE_NAME:$IMAGE_TAG .
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:$IMAGE_TAG
  publish-util-arm64:
    environment:
      IMAGE_NAME: eb129/incidentbot
    docker:
      - image: cimg/base:current
    resource_class: arm.medium
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish amd64 Docker Image to Docker Hub
          command: |
            echo 'export IMAGE_TAG=util-$(cat version)' >> "$BASH_ENV"
            source "$BASH_ENV"
            docker build --platform linux/arm64 --file Dockerfile.util.arm64 --tag $IMAGE_NAME:$IMAGE_TAG-arm64 .
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:$IMAGE_TAG-arm64
workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            branches:
              ignore: main
      - build-arm64:
          filters:
            branches:
              ignore: main
      - build-util:
          filters:
            branches:
              ignore: main
      - build-util-arm64:
          filters:
            branches:
              ignore: main
      - publish:
          filters:
            branches:
              only: main
      - publish-arm64:
          filters:
            branches:
              only: main
      - publish-util:
          filters:
            branches:
              only: main
      - publish-util-arm64:
          filters:
            branches:
              only: main
